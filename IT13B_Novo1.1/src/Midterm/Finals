package Finals;

import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;
import javax.swing.JTextField;

public class GUI_Login {

    public static void main(String[] args) {

        JFrame frame = new JFrame("Login");

        JTextField usernameField = new JTextField();
        JPasswordField passwordField = new JPasswordField();
        JLabel usernameLabel = new JLabel("Username:");
        JLabel passwordLabel = new JLabel("Password:");
        JButton loginButton = new JButton("Login:");

        frame.setLayout(new GridLayout(3, 2));
        frame.getContentPane().add(usernameLabel);
        frame.getContentPane().add(usernameField);
        frame.getContentPane().add(passwordLabel);
        frame.getContentPane().add(passwordField);
        frame.getContentPane().add(loginButton);

        loginButton.addActionListener(new ActionListener() {
            Override
            public void actionPerformed(ActionEvent e) {

                String enteredUsername = usernameField.getText();
                String enteredPassword = new String(passwordField.getPassword());

                int encryptionKey = 3;
                String encryptedPassword = encryptPassword(enteredPassword, encryptionKey);

                boolean isAuthenticated = authenticateUser(enteredUsername, encryptedPassword);

                if (isAuthenticated) {
                    JOptionPane.showMessageDialog(frame, "Login successful!");
                } else {
                    JOptionPane.showMessageDialog(frame, "Invalid username or password.");
                }
            }
        });

        frame.setBounds(600, 300, 400, 250);
        frame.setVisible(true);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    }

    public static String encryptPassword(String password, int key) {
        char[] passwordChars = password.toCharArray();
        for (int i = 0; i < passwordChars.length; i++) {
            passwordChars[i] += key;
        }
        return new String(passwordChars);
    }

    public static boolean authenticateUser(String username, String encryptedPassword) {
        try (BufferedReader reader = new BufferedReader(new FileReader("C:\\Users\\Novo\\Documents\\LOGIN.txt"))) {
            String line;
            while ((line = reader.readLine()) != null) {
                String[] credentials = line.split(",");
                if (credentials.length >= 2) {
                    String storedUsername = credentials[0].trim();
                    String storedEncryptedPassword = credentials[1].trim();

                    if (username.equals(storedUsername) && encryptedPassword.equals(storedEncryptedPassword)) {
                        return true;
                    }
                }
            }
        } catch (IOException e) {
            System.out.println("Errors ahead of reading the file.");
        }
        return false;
    }
}
